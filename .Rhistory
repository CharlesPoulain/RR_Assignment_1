svd2$d[,1:2]
svd2$d[,1]
svd2$V[,1:2]
svd2$v[,1:2]
svd2$d
dim(faceData)
a1<- svd1$u[,1] %*% (svd1$d[1]) %*% t(svd1$v[,1])
a1<- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
?myImage
View(myImage)
image(t(a1)[,nrow(a1):1])
myImage(a1)
a2<- svd1$u[,1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2])
a2<- svd1$u[,1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2])
svd1
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2<- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
?table
table(ssd)
table(ssd$subject)
names(ssd)
table(ssd$activity)
swirl()
sum(table(ssd$subject))
table(ssd$activity)
sub1<-subset(ssd,subject==1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist<-dist(sub1[,1:3])
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col=sub1$activity)
unclass(sub1$activity)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist<-dist(sub1[,10:12])
hclustering<-hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1<-svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
nrow(sub1)
ncol(sub1)
names(sub1)
swirl()
maxCon<-which.max(svd1$v[,2])
maxCon
max(svd1$v[,2])
svd1$v[296,2]
svd1$v[26,2]
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering(mdist)
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
nrow(svd1$v)
?max
max(svd1$v[,1])
which.max(svd1$v[,1])
names(svd$v[281,1])
names(svd1v[281,1])
names(svd1$v[281,1])
svd1$v[281,]
names(sub1[,281]
)
sub1[,281]
names(sub1)
swirl()
myplclust(hclustering,lab.col=unclass(sub1$activity))
swirl()
sub1[maxCon]
names(sub1[281])
names(sub1[maxCon])
kClust<-kmeans(sub1,6)
kClust<-kmeans(sub1,centers=6)
kClust<-kmeans(data=sub1,centers=6)
sub1
kClust<-kmeans(sub1[,-c[562,563]],centers=6)
kClust<-kmeans(sub1[,-c(562,563)],centers=6)
table(kClust$cluster,sub1$activity)
table(kClust$cluster,sub1$activity,nstarts = 100 )
kClust<-kmeans(sub1[,-c(562,563)],centers=6,nstarts=100)
kClust<-kmeans(sub1[,-c(562,563)],centers=6,nstart=100)
table(kClust$cluster,sub1$activity,nstarts = 100 )
table(kClust$cluster,sub1$activity)
dim(kClust)
dim(kClust$centers)
plot(kClust)
plot(kClust$cluster)
laying<-which(kClust$size==29)
laying
plot(kClust$centers[6,1:12],pch=19,ylab="Laying Cluster")
plot(kClust$centers[laying,1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
walkdown<-which(kClust$size==49)
plot(kClust$centers[walkdown,1:12],pch=19,ylab="Walkdown Cluster")
getwd()
rm(list=ls())
gg
"gg"
rm(list=ls())
rm(list=ls())
getwd()
ok
q()
getwd()
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames<-strsplit(cnames,sep="|",set=TRUE)
cnames<-strsplit(cnames,sep="|",fixed=TRUE)
cnames<-strsplit(cnames,"|",fixed=TRUE)
?strsplit
cnames
names(pm0)<-make.names(cnames[[1]][wcol])
head(pm0)
x0<-pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1)<-make.names(cnames[[1]][wcol])
dim(pm1)
x1<-pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x1),log10(x2))
boxplot(log10(x0),log10(x1))
negative(x1<0)
negative<-(x1<0)
negative<-x1<0
sum(negative,is.na=TRUE)
sum(negative,na.rm =TRUE)
mean(negative,na.rm =TRUE)
dates<-pm1$Date
str(dates)
dates<-as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negative],"month")
str(site0)
intersect(site0,site1)
both<-intersect(site0,site1)
both
pm0
head(pm0)
cnt0<-subset(pm0,(pm0$State.Code == 36 & pm0$county.site %in% site0))
cnt0<-subset(pm0,(pm0$State.Code == 36 & pm0$county.site %in% both))
cnt0<-subset(pm0,pm0$State.Code == 36 & pm0$county.site %in% both)
cnt0<-subset(pm0,State.Code == 36 & county.site %in% both)
cnt1<-subset(pm1,State.Code == 36 & county.site %in% both)
sapply(split(cnt0,cnt0$county.side),nrow)
sapply(split(cnt0,cnt0$county.side),nrow)
sapply(split(cnt0,cnt0$county.side)
)
sapply(split(cnt0,cnt0$county.side), nrow)
?split
sapply(split(cnt0,cnt0$county.side), nrow)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt0,cnt0$county.side), nrow)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub<-subset(cnt0, County.Code==63 & Site.ID == 2008)
pm1sub<-subset(cnt1, County.Code==63 & Site.ID == 2008)
x0sub<-pm0sub$Sample.Value
x1sub<-pm1sub$Sample.Value
dates0<-as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1<-as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow=c(1,2),mar=c(4,4,2,1))
plot(dates0,x0sub,pch=20)
abline(median(x0sub,na.rm=TRUE),lwd=2)
abline(lwd=2,median(x0sub,na.rm=TRUE))
abline?
?abline
?abline
abline(h=median(x0sub,na.rm=TRUE),lwd=2)
plot(dates1,x1sub,pch=20)
abline(h=median(x1sub,na.rm=TRUE),lwd=2)
rng<-range(x0sub,x1sub,na.rm=TRUE)
rng
mn0<-with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
mn0
str(mn0)
mn1<-with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0<-data.frame(state=names(mn0),mean=mn0)*
)
d0<-data.frame(state=names(mn0),mean=mn0)
d1<-data.frame(state=names(mn1),mean=mn1)
mrg<-merge(d0,d1,set="state")
mrg<-merge(d0,d1,by ="state")
d1
dim(mrg)
head(mrg)
with(mrg,plot(rep(1,52),mrg[,2],xlim=c(.5,2.5)))
with(mrg,plot(rep(2,52),mrg[,3])
)
with(mrg,plot(rep(2,52),mrg[,3]))
with(mrg,plot(rep(1,52),mrg[,2],xlim=c(.5,2.5)))
with(mrg,points(rep(2,52),mrg[,3]))
segments(1,mrg[,2],2,mrg[,3])
with(mrg,plot(rep(1,52),mrg[,2],xlim=c(.5,2.5)))
with(mrg,points(rep(2,52),mrg[,3]))
segments(rep(1,52),mrg[,2],rep(2,52),mrg[,3])
mrg[mrg$mean.x<mrg$mean.y,]
q()
swirl()
library(swirl)
swirl()
?function
()
;
?solved
?unzip
url<- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
file<- download.file(url,"activity.zip")
read.csv(file)
read.csv("activity.zip")
data<-read.csv("activity.zip")
data
data<-read.csv("activity.zip")
data
data<-read.csv("activity.zip",header=TRUE,sep=",")
data
unzip("activity.zip","activity.csv")
?unzip
dir
get dir
get dir()
?dir
getwd()
setwd("C://Users/Charles/Desktop/RR_Assignment")
setwd("C://Users/Charles/Desktop/")
getwd()
setwd("C://Users//Charles//Desktop//RR_Assignment_1")
getwd()
unzip("activity.zip","activity.csv")
data<-read.csv("activity.csv")
data
class(data[,2])
levels(data[,2])
table(data)
n_steps_day<-aggregate(data[,1],by=list(data$date), FUN=sum)
n_steps_day
n_steps_day<-aggregate(data[,1],by=list(data$date), FUN=sum)
?na.rm
??rm.na
?sum
n_steps_day<-tapply(data[,1],data$date, FUN=sum)
n_steps_day
n_steps_day<-tapply(na.omit(data[,1]),data$date, FUN=sum)
na.omit(data[,1])
na.omit(data)
hist_data<- na.omit(data)
n_steps_day<-aggregate(hist_data[,1],by=list(hist_data$date), FUN=sum)
n_steps_day
qplot(n_steps_day)
require(ggplot2)
qplot(n_steps_day)
?qplot
ggplot(hist_data, aes(x=Group.1, y=x)) + geom_bar(stat="identity") + facet_grid(X~.)
ggplot(hist_data, aes(x=Group.1, y=x)) + geom_bar(stat="identity") + facet_grid(x~.)
?GeomBar
?geom_bar
ggplot(hist_data, aes(x=Group.1, y=x)) + geom_bar(stat="identity") + facet_grid(x~.
ggplot(hist_data, aes(x=Group.1, y=x)) + geom_bar(stat="identity")
ggplot(hist_data, aes(x=Group.1, y=x)) + geom_bar(stat="identity")
names(hist_data)
n_steps_day
ggplot(n_steps_day, aes(x=Group.1, y=x)) + geom_bar(stat="identity")
?hist
hist(n_steps_day[,2])
hist(n_steps_day[,1])
ggplot(n_steps_day, aes(x=Group.1, y=x)) + geom_bar(stat="identity")
ggplot(n_steps_day, aes(x=row(x), y=x)) + geom_bar(stat="identity")
?row
row(n_steps_day)
ggplot(n_steps_day, aes(x=row(n_steps_day[1,]), y=x)) + geom_bar(stat="identity")
ggplot(n_steps_day, aes(x=row(n_steps_day), y=x)) + geom_bar(stat="identity")
ggplot(n_steps_day, aes(x=row(n_steps_day[,1]), y=x)) + geom_bar(stat="identity")
ggplot(n_steps_day, aes(x=row(n_steps_day), y=x)) + geom_bar(stat="identity")
ggplot(n_steps_day, aes(x=Group.1, y=x)) + geom_bar(stat="identity")
ggplot(n_steps_day, aes(x=Group.1, y=x)) + geom_bar(stat="identity"
ggplot(n_steps_day, aes(x=Group.1, y=x)) + geom_bar(stat="identity"
ggplot(n_steps_day, aes(x=Group.1, y=x)) + geom_bar(stat="identity") + facet_grid(x~.)
ggplot(n_steps_day, aes(x=Group.1, y=x)) + geom_bar(stat="identity") + facet_grid(Group.1~.)
ggplot(n_steps_day, aes(x=Group.1, y=x)) + geom_bar(stat="identity")
class(n_steps_day[,1])
as.date(n_steps_day[,1])
?as.Date
as.Date(n_steps_day[,1])
class(as.Date(n_steps_day[,1]))
ggplot(n_steps_day, aes(x=as.Date(Group.1), y=x)) + geom_bar(stat="identity")
ggplot(n_steps_day, aes(x=as.Date(Group.1), y=x)) + geom_bar(stat="identity")+labs()
?labs
ggplot(n_steps_day, aes(x=as.Date(Group.1), y=x)) + geom_bar(stat="identity")+labs(title="Total number of steps taken each day")
ggplot(n_steps_day, aes(x=as.Date(Group.1), y=x)) + geom_bar(stat="identity")+labs(title="Total number of steps taken each day")+theme(plot.title = element_text(hjust = 0.5))
ggplot(n_steps_day, aes(x=as.Date(Group.1), y=x)) + geom_bar(stat="identity")+labs(title="Total number of steps taken each day",y="Steps",x="Date")+theme(plot.title = element_text(hjust = 0.5))
ggplot(n_steps_day, aes(x=as.Date(Group.1), y=x)) + geom_bar(stat="identity")+labs(title="Total number of steps taken each day",y="Steps",x="Date")+theme(plot.title = element_text(hjust = 0.5))
?median
?median
w/o_na_data<-na.omit(data)
mean_steps_day<-aggregate(hist_data[,1],by=list(hist_data$date), FUN=mean)
mean_steps_day
median(n_steps_day)
mean(n_steps_day[,2])
median(n_steps_day[,2])
mean_steps_interval<-aggregate(data[,1],by=list(data$interval), FUN=mean,na.rm=TRUE)
mean_steps_interval
?strftime
?strptime
strptime(data[,3],%H%M)
strptime(data[,3],%H:%M:)
data[,3]
strptime(data[,3],%H:%M)
sata$interval <- strptime(gsub("([0-9]{1,2})([0-9]{2})", "\\1:\\2", data$interval), format='%H:%M')
data$interval <- strptime(gsub("([0-9]{1,2})([0-9]{2})", "\\1:\\2", data$interval), format='%H:%M')
dat
data
data$interval <- strptime(gsub("([0-9]{1,2})([0-9]{2})", "\\1:\\2", data$interval), format='%H:%M')
gsub("([0-9]{1,2})([0-9]{2})", "\\1:\\2", data$interval)
?gsub
url<- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(url,"activity.zip")
unzip("activity.zip","activity.csv")
file.remove("activity.zip")
data<-read.csv("activity.csv")
file.remove("activity.csv")
gsub("([0-9]{1,2})([0-9]{2})", "\\1:\\2", data$interval)
url<- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(url,"activity.zip")
unzip("activity.zip","activity.csv")
file.remove("activity.zip")
data<-read.csv("activity.csv")
file.remove("activity.csv")
gsub("([0-9]{1,2})", "\\1:\\", data$interval)
gsub("([0-9]{1,2})([0-9]{2})", "\\1:\\2", data$interval)
gsub("([0-9]{1,2})", "\\1:\\2", data$interval)
gsub("([0-9]{1})([0-9]{2})", "\\1:\\2", data$interval)
gsub("([0-9]{1,2})([0-9]{2})", "\\1:\\2", data$interval)
gsub("([0-9]{1,2})([0-9]{2})", "\\2:\\1", data$interval)
gsub("([0-9]{1,2})", "\\1:\\2", data$interval)
gsub("([0-9]{1,2})([0-9]{2})", "\\2:\\1", data$interval)
url<- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(url,"activity.zip")
unzip("activity.zip","activity.csv")
file.remove("activity.zip")
data<-read.csv("activity.csv")
file.remove("activity.csv")
gsub("([0-9]{1,2})([0-9]{2})", "\\1:\\1", data$interval)
url<- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(url,"activity.zip")
unzip("activity.zip","activity.csv")
file.remove("activity.zip")
data<-read.csv("activity.csv")
file.remove("activity.csv")
gsub("([0-9]{1,2})([0-9]{2})", "\\1:\\2", data$interval)
gsub("([0-9]{1,2})([0-9]{1})", "\\1:\\2", data$interval)
gsub("([0-9]{1,2})([0-9]{2})", "\\1:\\2", data$interval)
gsub("([0-9]{1,2})", "\\1:\\2", data$interval)
gsub("([0-9]{2})", "\\1:\\2", data$interval)
gsub("([0-9]{2})([0-9]{2})", "\\1:\\2", data$interval)
gsub("([0-9]{1,2,3})([0-9]{2})", "\\1:\\2", data$interval)
gsub("([0-9]{1,2,3})", "\\1:\\2", data$interval)
gsub("([0-9]{1,2,3})", "\\1:\\2\\3", data$interval)
gsub("([0-9]{3})", "\\1:\\2\\3", data$interval)
gsub("([0-9]{1,2})([0-9]{1})", "\\1:\\2", data$interval)
gsub("([0-9]{2})([0-9]{2})", "\\1:\\2", data$interval)
gsub("([0-9]{1,2})([0-9]{2})", "\\1:\\2", data$interval)
gsub("([0-9]{1,2})([0-9]{1})", "\\1:\\2", data$interval)
data
data$interval<-gsub("([0-9]{1,2})([0-9]{1})", "\\1:\\2", data$interval)
data
data$interval<-gsub("([0-9]{1,2})([0-9]{2})", "\\1:\\2", data$interval)
data
url<- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(url,"activity.zip")
unzip("activity.zip","activity.csv")
file.remove("activity.zip")
data<-read.csv("activity.csv")
file.remove("activity.csv")
data$interval<-gsub("([0-9]{1,2})([0-9]{2})", "\\1:\\2", data$interval)
data
mean_steps_interval<-aggregate(data[,1],by=list(data$interval), FUN=mean,na.rm=TRUE)
mean_steps_interval$Group.1<-gsub("([0-9]{1,2})([0-9]{2})", "\\1:\\2", mean_steps_interval$Group.1)
mean_steps_interval
strptime(mean_steps_interval$Group.1,format = "%H:%M")
plot_data<-data
plot_data$interval<-gsub("([0-9]{1,2})([0-9]{2})", "\\1:\\2", plot_data$interval)
plot_data$interval<-strptime(plot_data$interval,format = "%H:%M")
plot_data
data$interval <- strptime(gsub("([0-9]{1,2})([0-9]{2})", "\\1:\\2", data$interval), format='%H:%M')
data
data$interval <- strptime(gsub("([0-9]{1,2})([0-9]{2})", "\\1:\\2", data$interval), format='%H:%M')
?strptime
data$interval <- strptime(gsub("([0-9]{1,2})([0-9]{2})", "\\1\\:2", data$interval), format='%H:%M')
data
url<- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(url,"activity.zip")
unzip("activity.zip","activity.csv")
file.remove("activity.zip")
data<-read.csv("activity.csv")
file.remove("activity.csv")
data$steps
data$interval
data
plot_data<-data
plot_data$interval <- paste(trunc(plot_data$interval/100),":",plot_data$interval-trunc(plot_data$interval/100))
plot_data
plot_data<-data
plot_data$interval <- paste(trunc(plot_data$interval/100),":",(plot_data$interval/100-trunc(plot_data$interval/100))*100)
plot_data
class(plot_data$interval)
plot_data$interval<-strptime(plot_data$interval,format = "%H:%M")
plot_data$interval
as.POSIXct(plot_data$interval)
plot_data<-data
plot_data$interval <- paste(trunc(plot_data$interval/100),":",(plot_data$interval/100-trunc(plot_data$interval/100))*100)
as.POSIXct(plot_data$interval)
(plot_data$interval/100-trunc(plot_data$interval/100))*100
plot_data<-data
(plot_data$interval/100-trunc(plot_data$interval/100))*100
class((plot_data$interval/100-trunc(plot_data$interval/100))*100)
paste(trunc(plot_data$interval/100),":"(plot_data$interval/100-trunc(plot_data$interval/100))*100
)
paste(trunc(plot_data$interval/100),":",(plot_data$interval/100-trunc(plot_data$interval/100))*100)
as.numeric(paste(trunc(plot_data$interval/100),":",(plot_data$interval/100-trunc(plot_data$interval/100))*100))
as.Date(paste(trunc(plot_data$interval/100),":",(plot_data$interval/100-trunc(plot_data$interval/100))*100))
as.Date(paste(trunc(plot_data$interval/100),":",(plot_data$interval/100-trunc(plot_data$interval/100))*100))
as.data.frame.list()
as.Date(paste(trunc(plot_data$interval/100),":",(plot_data$interval/100-trunc(plot_data$interval/100))*100))
as.Date(paste(trunc(plot_data$interval/100),":",round((plot_data$interval/100-trunc(plot_data$interval/100))*100))
)
paste(trunc(plot_data$interval/100),":",round((plot_data$interval/100-trunc(plot_data$interval/100))*100))
plot_data<-data
plot_data$interval <- paste(trunc(plot_data$interval/100),":",round((plot_data$interval/100-trunc(plot_data$interval/100))*100))
plot_data$interval<-strptime(plot_data$interval,format = "%H:%M")
plot_data
plot_data<-data
plot_data$interval <- paste(trunc(plot_data$interval/100),":",round((plot_data$interval/100-trunc(plot_data$interval/100))*100))
plot_data$interval<-strptime(plot_data$interval)
as.POSIXct(plot_data$interval, format="%H:%M")
library(lubridate)
hm(as.character(plot_data$interval))
class(hm(as.character(plot_data$interval)))
?lubridate
plot_data<-data
hm(as.character(plot_data$interval))
plot_data<-data
plot_data$interval <- paste(trunc(plot_data$interval/100),":",round((plot_data$interval/100-trunc(plot_data$interval/100))*100))
plot_data$interval<-strptime(plot_data$interval)
plot_data<-data
plot_data$interval <- paste(trunc(plot_data$interval/100),":",round((plot_data$interval/100-trunc(plot_data$interval/100))*100))
hm(as.character(plot_data$interval))
as.POSIXct(plot_data$interval, format="%H:%M")
plot_data<-data
plot_data$interval <- paste(trunc(plot_data$interval/100),":",round((plot_data$interval/100-trunc(plot_data$interval/100))*100))
hm(as.character(plot_data$interval))
mean_steps_interval<-aggregate(data[,1],by=list(data$interval), FUN=mean,na.rm=TRUE)
mean_steps_interval
plot_data<-data
plot_data$interval <- paste(trunc(plot_data$interval/100),":",round((plot_data$interval/100-trunc(plot_data$interval/100))*100))
hm(as.character(plot_data$interval))
mean_steps_interval<-aggregate(plot_data[,1],by=list(plot_data$interval), FUN=mean,na.rm=TRUE)
mean_steps_interval
plot_data<-data
plot_data$interval <- paste(trunc(plot_data$interval/100),":",round((plot_data$interval/100-trunc(plot_data$interval/100))*100))
strptime(plot_data$interval,format="%H:%M")
plot_data<-data
plot_data$interval <- paste(trunc(plot_data$interval/100),":",round((plot_data$interval/100-trunc(plot_data$interval/100))*100))
as.Date.character(plot_data$interval,format="%H:%M")
as.Date.character(plot_data$interval,format="%Y-%m-%d %H:%M:%S")
plot_data<-data
plot_data$interval <- paste(trunc(plot_data$interval/100),":",round((plot_data$interval/100-trunc(plot_data$interval/100))*100))
as.Date.character(plot_data$interval,format="%Y-%m-%d %H:%M:%S")
as.Date(plot_data$interval,format="%Y-%m-%d %H:%M:%S")
plot_data<-data
plot_data$interval <- paste(trunc(plot_data$interval/100),":",round((plot_data$interval/100-trunc(plot_data$interval/100))*100))
as.Date(plot_data$interval,format="%Y-%m-%d %H:%M:%S")
zippedFileUrl<-"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
temp<-tempfile()
download.file(zippedFileUrl,temp)
data<-read.table(unz(temp,"household_power_consumption.txt"),sep=";",header=TRUE)
##didn't find the way to subset before reading the file, do you have a way ?
unlink(temp)
##here we have data,data frame containing all the data
data_s<-data[data$Date=="1/2/2007" | data$Date=="2/2/2007",]
##we built a subset of data, data_s, that contain row with both asked dates
data_s$DateTime<-paste(data_s$Date,data_s$Time)
##data_s as it was in the previous step was enough for plot1.
##but for the next plot I need to have a DateTime variable
data_s$DateTime<-paste(data_s$Date,data_s$Time)
data_s$DateTime<- strptime(data$Date&Time,"%d/%m/%Y %H:%M:%S")
data
plot_data
?formatC
url<- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(url,"activity.zip")
unzip("activity.zip","activity.csv")
file.remove("activity.zip")
data<-read.csv("activity.csv")
file.remove("activity.csv")
plot_data<-data
plot_data$interval <- paste(formatC(trunc(plot_data$interval/100),width=2,format="d"),":",formatC(round((plot_data$interval/100-trunc(plot_data$interval/100))*100),width=2,format="d"))
plot_data
